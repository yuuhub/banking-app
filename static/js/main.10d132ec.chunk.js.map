{"version":3,"sources":["bank_functionalities/utils.js","bank_functionalities/bank_functions.js","components/Deposit.js","components/UserTable.js","components/AddUserForm.js","components/Accounts.js","components/Withdraw.js","components/Send.js","components/img/4565.png","components/Dashboard.js","components/Sidebar.js","components/img/avatar.png","components/Navbar.js","App.js","index.js"],"names":["get_current_date","newDate","Date","date","getDate","month","getMonth","year","getFullYear","numberWithCommas","x","toString","replace","search_name","accountNo_to_search","key_of_name","key","localStorage","user_rec","JSON","parse","getItem","includes","Deposit","useState","accountNo","setAccountNo","amount","setAmount","className","onSubmit","e","account_to_search","search_key","name","balance","curr_bal","parseFloat","curr_amt","user_info","history_info","refNo","Math","floor","random","transactionType","setItem","stringify","length","alert","deposit","preventDefault","id","type","min","placeholder","onChange","target","value","UserTable","users","map","user","accountNumber","toUpperCase","dateCreated","AddUserForm","setUsers","setOpenModal","openModal","setUser","useEffect","handleChange","newUser","toLocaleString","minimumIntegerDigits","useGrouping","toLowerCase","some","newUserList","push","handleAddAccount","onClick","icon","faTimes","htmlFor","required","Accounts","setSearch","displayUsers","search","userData","list_users","filter","newSearchList","Withdraw","new_bal","withdraw","Send","sender","setSender","recipient","setRecipient","event","senderKey","recipientKey","senderRecord","recipientRecord","senderNewBalance","recipientNewBalance","sender_info","recipient_info","transaction_info","send","Dashboard","transactions","transactionData","transaction_rec","list_transactions","numberOfAccounts","calculateAccounts","totalDeposits","calculateDeposits","totalWithdrawals","totalWithdrawal","calculateWithdrawals","src","img","alt","class","faUsers","faMoneyCheckAlt","faMoneyBillWave","item","sidebarMenu","title","faHome","link","faPaperPlane","Sidebar","menu","index","window","location","pathname","Navbar","avatar","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10d132ec.chunk.js","sourcesContent":["\r\n/**\r\n * Function that returns the current date. \r\n *\r\n */\r\nexport function get_current_date() {\r\n    let newDate = new Date()\r\n    let date = newDate.getDate();\r\n    let month = newDate.getMonth() + 1;\r\n    let year = newDate.getFullYear();\r\n\r\n    return `${month<10?`0${month}`:`${month}`}-${date<10?`0${date}`:`${date}`}-${year}`   \r\n}\r\n\r\n/**\r\n * Function that obtains the last key used by the localStorage\r\n * used for creating object's keys.\r\n */\r\n export function get_last_key_from_localstorage() {\r\n    //console.log(localStorage._keys.length);\r\n    return localStorage.length + 1;\r\n}\r\n\r\n//Function that returns a currency value string with commas\r\nexport function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","import { get_current_date } from \"./utils\";\r\nimport { numberWithCommas } from \"./utils\";\r\n\r\n// /**\r\n//  * Function that handles the creation of users and passing it \r\n//  * to the localStorage.\r\n//  * @param {javascript object from the submitted form data} user \r\n//  */\r\n\r\n// export function create_user(user){\r\n//     localStorage.setItem(get_last_key_from_localstorage(), JSON.stringify(user)); \r\n// }\r\n\r\nexport function list_users(){\r\n    let userData = [];\r\n    let newDate = new Date()\r\n    let year = newDate.getFullYear();\r\n    for (let key in localStorage){\r\n        let user_rec = JSON.parse(localStorage.getItem(key));\r\n        if(user_rec !== null && key.includes('user')){\r\n            let user = {\r\n                accountNumber: user_rec['accountNo'],\r\n                name: user_rec['name'],\r\n                balance: user_rec['balance'],\r\n                dateCreated: get_current_date(),\r\n            }\r\n            userData.push(user);\r\n        }\r\n    }    \r\n    return userData;\r\n}\r\n\r\nexport function list_transactions(){\r\n    const transactionData = [];\r\n\r\n    for (let key in localStorage){\r\n        let transaction_rec = JSON.parse(localStorage.getItem(key));\r\n        if(transaction_rec !== null && key.includes('history')){\r\n            let user = {\r\n                accountNo: transaction_rec['accountNo'],\r\n                name: transaction_rec['name'],\r\n                amount: transaction_rec['amount'],\r\n                date: transaction_rec['date'],\r\n                refNo: transaction_rec['refNo'],\r\n                transactionType: transaction_rec['transactionType']\r\n            }\r\n            transactionData.push(user);\r\n        }\r\n    }   \r\n    return transactionData;\r\n}\r\n\r\nexport function calculateAccounts () {\r\n    let numberOfAccounts = 0;\r\n\r\n    for (let key in localStorage) {\r\n        if(key.includes('user')) {\r\n            numberOfAccounts++;\r\n        }\r\n    }\r\n\r\n    return numberOfAccounts;\r\n}\r\n\r\nexport function calculateDeposits () {\r\n    let totalDeposits = 0;\r\n\r\n    for (let key in localStorage) {\r\n        let transaction_rec = JSON.parse(localStorage.getItem(key));\r\n        if (key.includes('history') && transaction_rec['transactionType'] === 'deposit') {\r\n            totalDeposits += transaction_rec['amount'];\r\n        }\r\n    }\r\n\r\n    return totalDeposits;\r\n}\r\n\r\nexport function calculateWithdrawals () {\r\n    let totalWithdrawal = 0;\r\n\r\n    for (let key in localStorage) {\r\n        let transaction_rec = JSON.parse(localStorage.getItem(key));\r\n        if (key.includes('history') && transaction_rec['transactionType'] === 'withdrawal') {\r\n            totalWithdrawal += transaction_rec['amount'];\r\n        }\r\n    }\r\n    \r\n    return totalWithdrawal;\r\n}\r\n\r\nexport function search_name(accountNo_to_search){\r\n    let key_of_name = null;\r\n\r\n    for(let key in localStorage){\r\n        //read the content from localStorage\r\n        let user_rec = JSON.parse(localStorage.getItem(key));\r\n        if (user_rec !== null) {\r\n            //check if accountNo_to_search is the same \r\n            if(accountNo_to_search === user_rec['accountNo'] && key.includes('user')) {\r\n                key_of_name = key;\r\n            }\r\n        }\r\n    }\r\n\r\n    return key_of_name; //null or key of the username to look at\r\n}\r\n\r\nexport function deposit(account_to_search, amount){\r\n    const search_key = search_name(account_to_search);\r\n    const { accountNo, name, balance } = JSON.parse(localStorage.getItem(search_key));\r\n    \r\n    const curr_bal = parseFloat(balance);\r\n    const curr_amt = parseFloat(amount);\r\n    const new_bal = curr_amt + curr_bal;\r\n    const transactionType = \"deposit\";\r\n\r\n    const user_info = {\r\n        accountNo: accountNo,\r\n        name: name,\r\n        balance: new_bal\r\n    }\r\n\r\n    const history_info = {\r\n        refNo: Math.floor(100000 + Math.random() * 900000),\r\n        accountNo: accountNo,\r\n        name: name,\r\n        amount: curr_amt,\r\n        transactionType: transactionType,\r\n        date: get_current_date()\r\n    }\r\n   \r\n    localStorage.setItem(search_key, JSON.stringify(user_info));\r\n    localStorage.setItem(`history${localStorage.length + 1}`, JSON.stringify(history_info));\r\n    alert('succesful transaction')\r\n}\r\n\r\nexport function balance(accountNo_to_search){\r\n    let search_key = search_name(accountNo_to_search);\r\n\r\n    // object destructuring\r\n    let {accountType, name, balance} = JSON.parse(localStorage.getItem(search_key));\r\n    \r\n    let curr_bal = parseFloat(balance);\r\n\r\n    return curr_bal;\r\n}\r\n\r\nexport function withdraw(account_to_search, amount){\r\n    const search_key = search_name(account_to_search);\r\n\r\n    // object destructuring\r\n    const { accountNo, name, balance } = JSON.parse(localStorage.getItem(search_key));\r\n    \r\n    const curr_bal = parseFloat(balance);\r\n    const curr_amt = parseFloat(amount);\r\n    const new_bal = curr_bal - curr_amt;\r\n\r\n    \r\n    const transactionType = \"withdrawal\";\r\n\r\n    if(curr_amt > curr_bal) {\r\n        alert ('Insufficient balance');\r\n    }\r\n    else {\r\n        const user_info = {\r\n            accountNo: accountNo,\r\n            name: name,\r\n            balance: new_bal,\r\n        }\r\n\r\n        const history_info = {\r\n            refNo: Math.floor(100000 + Math.random() * 900000),\r\n            accountNo: accountNo,\r\n            name: name,\r\n            amount: curr_amt,\r\n            transactionType: transactionType,\r\n            date: get_current_date()\r\n        }\r\n    \r\n        localStorage.setItem(search_key, JSON.stringify(user_info));\r\n        localStorage.setItem(`history${localStorage.length + 1}`, JSON.stringify(history_info));\r\n        alert('succesful transaction')\r\n    }\r\n}\r\n\r\nexport function send(sender, recipient, amount){\r\n    const senderRecord = JSON.parse(localStorage.getItem(sender));\r\n    const recipientRecord = JSON.parse(localStorage.getItem(recipient));\r\n\r\n    const senderNewBalance = parseFloat(senderRecord['balance']) - parseFloat(amount);\r\n    const recipientNewBalance = parseFloat(recipientRecord['balance']) + parseFloat(amount);\r\n\r\n    const transactionType = 'transfer';\r\n\r\n    if(senderNewBalance < 0) {\r\n        alert ('Insufficient balance');\r\n    }\r\n    else {\r\n        const sender_info = {\r\n            ...senderRecord,\r\n            balance: senderNewBalance\r\n        }\r\n\r\n        const recipient_info = {\r\n            ...recipientRecord,\r\n            balance: recipientNewBalance\r\n        }\r\n\r\n        const transaction_info = {\r\n            refNo: Math.floor(100000 + Math.random() * 900000),\r\n            accountNo: senderRecord['accountNo'],\r\n            name: senderRecord['name'],\r\n            amount: amount,\r\n            date: get_current_date(),\r\n            transactionType: transactionType\r\n        }\r\n\r\n        localStorage.setItem(sender, JSON.stringify(sender_info));\r\n        localStorage.setItem(recipient, JSON.stringify(recipient_info));\r\n        localStorage.setItem(`history${localStorage.length + 1}`, JSON.stringify(transaction_info));\r\n        alert('successful transaction')\r\n    }\r\n\r\n}\r\n","import { useState } from \"react/cjs/react.development\";\r\nimport {deposit, search_name} from '../bank_functionalities/bank_functions';\r\nimport '../css/forms.css'\r\n\r\nconst Deposit = () => {\r\n    const [ accountNo, setAccountNo ] = useState('')\r\n    const [ amount, setAmount ] = useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        let search_key = search_name(accountNo);\r\n\r\n        if(search_key !== null){\r\n            deposit(accountNo, amount);\r\n        } else {\r\n            alert(\"User does not exist!\");\r\n        }\r\n        e.preventDefault();\r\n    \r\n    }\r\n\r\n    return (\r\n        <div className='deposit-wrapper'>\r\n            <h1>Deposit</h1>\r\n            <form className='form-container' onSubmit={handleSubmit}>\r\n                {/* <label>Account No.</label>  */}\r\n                <input id='acct-no-input' type='number' min=\"1\" name='accountNo' placeholder='Account no.' onChange={e => setAccountNo(e.target.value)} />\r\n                {/* <label>amount</label>  */}\r\n                <input id='amount-input'  type='number' min='1' name='amount' placeholder='Amount' name='amount' onChange={e => setAmount(e.target.value)}/>\r\n                <button id='submit-btn'>Deposit</button>\r\n            </form>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Deposit\r\n\r\n// class Deposit extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n\r\n//         this.state = {\r\n//             accountNo: '',\r\n//             amount: '',\r\n//         }\r\n//         this.handleChange = this.handleChange.bind(this);\r\n//         this.handleSubmit= this.handleSubmit.bind(this)\r\n//     }\r\n   \r\n\r\n//     handleChange(event) {\r\n//         this.setState({\r\n//             [event.target.name]: event.target.value\r\n//         });\r\n//     }\r\n\r\n//     handleSubmit = (event) => {\r\n        \r\n//         let search_key = search_name(this.state.accountNo);\r\n        \r\n//         //if the name exists\r\n//         if(search_key !== null){\r\n//             deposit(this.state.accountNo, this.state.amount);\r\n//         } else {\r\n//             //error handling: name does not exist\r\n//             alert(\"User does not exist!\");\r\n//         }\r\n\r\n//         //console.log(search_key);\r\n        \r\n//         this.setState({\r\n//             amount: '',\r\n//             accountNo: '',\r\n//             transactionType: 'deposit'\r\n            \r\n//         })\r\n//         event.preventDefault()\r\n//     }\r\n    \r\n//     render() {\r\n//         return (\r\n//             <div className='grid-parent'>\r\n//                 <div className='deposit-wrapper'>\r\n//                     <h1>Deposit</h1>\r\n//                     <form className='depositContainer' onSubmit={this.handleSubmit}>\r\n//                         <label>Account No.</label> <input type='text' name='accountNo' value={this.state.name} onChange={this.handleChange}/> <br />\r\n//                         <label>amount</label> <input type='number' min='1' name='amount' value={this.state.amount} onChange={this.handleChange}/> <br />\r\n//                         <input type=\"submit\" value=\"Submit\" />\r\n//                     </form>\r\n//                 </div>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default Deposit\r\n","import { numberWithCommas } from '../bank_functionalities/utils'\r\nimport '../css/usertable.css'\r\n\r\n\r\nconst UserTable = ({users}) => {\r\n    \r\n    return (    \r\n        <div className='usertable-wrapper'>\r\n            <table className='usertable-container'>\r\n                <thead className='thead-container'>\r\n                    <tr className='tr-container'>\r\n                        <th id='accountNumber'> Account No. </th>\r\n                        <th id='accountName'> Account Name </th>\r\n                        <th id='balance'> Balance </th>\r\n                        <th id='dateCreated'> Date Created </th>\r\n\r\n                        {/* <th id='delete'> delete </th> */}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        users.map((user) => <tr key={user.id}>\r\n                            <td id='accountNo-data'>{user.accountNumber}</td>\r\n                            <td id='name-data'>{user.name.toUpperCase()}</td>\r\n                            <td id='balance-data'>{numberWithCommas(user.balance)}</td>\r\n                            <td id='date-data'>{user.dateCreated}</td>\r\n                            {/* <td>{user.accountType}</td> */}\r\n                            {/* <td><button onClick={() => onDeleteUser(user.id)}>delete</button></td> */}\r\n                        </tr>)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserTable","import React, { useEffect, useState } from 'react'\r\nimport '../css/addAcctModal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faTimes} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst AddUserForm = ({users, setUsers, openModal, setOpenModal }) => {\r\n    const [user, setUser] = useState(null)\r\n\r\n    //used for creating object's keys.\r\n    const get_last_key_from_localstorage = () => {\r\n        return `user${localStorage.length + 1}`;\r\n    }\r\n\r\n    //saving users to the local storage\r\n    useEffect(() => {\r\n        if(user !== null) {\r\n            localStorage.setItem(get_last_key_from_localstorage(), JSON.stringify(user)); \r\n        }\r\n    },[users])\r\n    \r\n\r\n    const handleChange = (e) => {\r\n        const newUser = {\r\n            ...user, \r\n            accountNo: (localStorage.length + 1).toLocaleString('en-US', {\r\n                minimumIntegerDigits: 5,\r\n                useGrouping: false\r\n            })\r\n        };\r\n        newUser[e.target.name.toLowerCase()] = e.target.value.toLowerCase();\r\n        setUser(newUser)\r\n    }\r\n\r\n    //pushes the new created user to users list\r\n    const handleAddAccount = (e) => {\r\n        e.preventDefault();\r\n        const { name } = user;\r\n\r\n        //creating new user and error handling\r\n        if (!users.some((user) => user.name === name)){\r\n            //create_user(user);\r\n            const newUserList = [...users];\r\n            newUserList.push(user);\r\n            setUsers(newUserList);\r\n        } else {\r\n            alert(\"user already exists\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='modal-background'>\r\n            <div id='modal-wrapper'>\r\n                <form id='add-acct-form' onSubmit={e=>handleAddAccount(e, user)}>\r\n                    <button id='x-btn'onClick={() => setOpenModal(false)}><FontAwesomeIcon icon={faTimes}></FontAwesomeIcon></button>\r\n                    <div id='name-container'>\r\n                        <label htmlFor='name'>Name</label>\r\n                        <input onChange={e=>handleChange(e)} type='text' name='name' id='name' required />\r\n                    </div>\r\n                    <div id='balance-container'>\r\n                        <label htmlFor='balance'>Balance</label>\r\n                        <input onChange={e=>handleChange(e)} min='1' type='number' name='balance' id='balance' required />\r\n                    </div>\r\n                    <div id='buttons'>\r\n                        <button id='cancel-btn' onClick={() => setOpenModal(false)}>Cancel</button>\r\n                        <button id='add-acct-submit-btn'type='submit'>Add Account</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AddUserForm","import { useState } from \"react\";\r\nimport UserTable from \"./UserTable\";\r\nimport { list_users } from \"../bank_functionalities/bank_functions\";\r\nimport AddUserForm from \"./AddUserForm\";\r\nimport '../css/addAcctModal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSearch} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Accounts = () => {\r\n    const [openModal, setOpenModal] = useState(false)\r\n    const [search, setSearch] = useState('')\r\n    //this function holds users list and returns users \r\n    const displayUsers = (search) => {\r\n        const userData = list_users();\r\n        if (search)\r\n            return userData.filter(user => user.name === search)\r\n        return userData;\r\n    }\r\n\r\n    const handleSearch = (e) => {\r\n        const newSearchList = displayUsers(e.target.value)\r\n        setSearch(newSearchList)\r\n        setUsers(newSearchList)\r\n    }\r\n\r\n    const [users, setUsers] = useState(displayUsers())   \r\n\r\n    //displaying new list depending on account type\r\n    // const handleAccount = (e) => {\r\n    //     const newUserList = displayUsers(e.target.value)\r\n    //     setUsers(newUserList)\r\n    // }\r\n    \r\n    //deleting a user object using its ID\r\n    // const handleDeleteUser = (id) => {\r\n    //     const newUserList = users.filter(user => user.id !== id)\r\n    //     setUsers(newUserList)\r\n    // }\r\n\r\n    return (\r\n        <div className='acct-wrapper'>\r\n            <h1 className='title'>Accounts</h1>\r\n            <input id='search-input' name='searchName' type='text' placeholder='Search' onChange={handleSearch}/>\r\n            <button id='add-acct-btn' onClick={() => {setOpenModal(true)}}>Add Account</button>\r\n            {openModal && <AddUserForm users={users} setUsers={setUsers} openModal={openModal} setOpenModal={setOpenModal}/>}\r\n            <UserTable users={users}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Accounts","import React, {useState} from 'react'\r\nimport {withdraw, search_name} from '../bank_functionalities/bank_functions'\r\nimport '../css/forms.css'\r\n\r\nconst Withdraw = () => {\r\n    const [ accountNo, setAccountNo ] = useState(\"\");\r\n    const [ amount, setAmount ] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        let search_key = search_name(accountNo);\r\n\r\n        if(search_key !== null){\r\n            withdraw(accountNo, amount);\r\n        } else {\r\n            alert(\"User does not exist!\");\r\n        }\r\n        \r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className='withdraw-wrapper'>\r\n            <h1>Withdraw</h1>\r\n            <form className='form-container'onSubmit={handleSubmit}>\r\n                {/* <label id='acct-no-label'>Account No.</label> */}\r\n                <input id='acct-no-input'type=\"number\" min=\"1\" placeholder='Account no.'onChange={e => setAccountNo(e.target.value)} />\r\n                {/* <label id='amount-label'>Amount</label> */}\r\n                <input id='amount-input' type=\"number\" min=\"1\" placeholder='Amount' onChange={e => setAmount(e.target.value)} />\r\n                <button id='submit-btn'>Withdraw</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Withdraw\r\n","import React, {useState} from 'react'\r\nimport { search_name, send } from '../bank_functionalities/bank_functions';\r\nimport '../css/forms.css'\r\n\r\nconst Send = () => {\r\n    const [ sender, setSender ] = useState(\"\");\r\n    const [ recipient, setRecipient ] = useState(\"\");\r\n    const [ amount, setAmount ] = useState(\"\");\r\n\r\n    const handleSend = (event) => {\r\n        event.preventDefault();\r\n        \r\n        const senderKey = search_name(sender);\r\n        const recipientKey = search_name(recipient);\r\n\r\n        //console.log(senderKey, recipientKey);\r\n\r\n        if(senderKey && recipientKey) {\r\n            send(senderKey, recipientKey, amount);\r\n        }\r\n        else {\r\n            alert('One or both account numbers do not exist');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='title'>Send</h1>\r\n            <form className='form-container' onSubmit={handleSend}>\r\n                {/* <label>Sender</label> */}\r\n                <input id='acct-no-input' type=\"text\" min='1' placeholder='Sender Account No.' onChange={e => setSender(e.target.value)} />\r\n                {/* <label>Recipient</label> */}\r\n                <input id='acct-no-input' type='text' min='1' placeholder='Recipient Account No.' onChange={e => setRecipient(e.target.value)} />\r\n                {/* <label>Amount</label> */}\r\n                <input id='amount-input' type=\"number\" min='1' placeholder='Amount' onChange={e => setAmount(e.target.value)}/>\r\n                <button id='submit-btn'>Send</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Send\r\n","export default __webpack_public_path__ + \"static/media/4565.2760f7ef.png\";","import React from 'react'\r\nimport { calculateAccounts, calculateDeposits, calculateWithdrawals, list_transactions } from '../bank_functionalities/bank_functions'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUsers } from '@fortawesome/free-solid-svg-icons'\r\nimport { faMoneyCheckAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { faMoneyBillWave } from '@fortawesome/free-solid-svg-icons'\r\nimport '../css/usertable.css'\r\nimport '../css/dashboard.css'\r\nimport { numberWithCommas } from '../bank_functionalities/utils'\r\nimport img from '../components/img/4565.png'\r\n\r\nconst Dashboard = () => {\r\n    const transactions = list_transactions();\r\n    const numberOfAccounts = calculateAccounts();\r\n    const totalDeposits = calculateDeposits();\r\n    const totalWithdrawals = calculateWithdrawals();\r\n\r\n    return (\r\n        <div>\r\n            <h1>Dashboard</h1>\r\n            <div className='welcome-container'>\r\n                <div className='title-container'>\r\n                    <h1>Welcome to the Dashboard</h1>\r\n                    <p>Here you can see some useful statistics about your accounts and recent transactions.</p>\r\n                </div>\r\n                <img src={img} alt='illustration' />\r\n            </div>\r\n\r\n            <h1>History</h1>\r\n            <div class='stats-container'>\r\n                <div className='stats-card'>\r\n                    <div className='title'>\r\n                        <span>Total Accounts</span>\r\n                        <FontAwesomeIcon icon={faUsers}></FontAwesomeIcon>\r\n                    </div>\r\n                    <span className='stat'>{numberOfAccounts}</span>\r\n                </div>\r\n                <div className='stats-card'>\r\n                    <div className='title'>\r\n                        <span>Total Deposits</span> \r\n                        <FontAwesomeIcon icon={faMoneyCheckAlt}></FontAwesomeIcon>\r\n                    </div>\r\n                    <span className='stat'>&#8369;{numberWithCommas(totalDeposits)}</span>\r\n                </div>\r\n                <div className='stats-card'>\r\n                    <div className='title'>\r\n                        <span>Total Withdrawals</span>\r\n                        <FontAwesomeIcon icon={faMoneyBillWave}></FontAwesomeIcon>\r\n                    </div>\r\n                    <span className='stat'>&#8369;{numberWithCommas(totalWithdrawals)}</span>\r\n                </div>\r\n            </div>\r\n\r\n            <h1>Recent Transactions</h1>\r\n            <div className='usertable-wrapper'>\r\n                <table className='usertable-container'>\r\n                    <thead className='thead-container'>\r\n                        <tr className='tr-container'>\r\n                            <th id='refNo'> Ref No. </th>\r\n                            <th id='transactionType'> Type </th>\r\n                            <th id='accountNo'> Account No </th>\r\n                            <th id='amount'> Amount </th>\r\n                            <th id='date'> Date </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            transactions.map((item) =>\r\n                                <tr>\r\n                                    <td id='refNo-data'>{item.refNo}</td>\r\n                                    <td id='type-date'>{item.transactionType.toUpperCase()}</td>\r\n                                    <td id='account-data'>{item.accountNo}</td>\r\n                                    <td id='amount-data'>{item.amount}</td>\r\n                                    <td id='date-data'>{item.date}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\nimport '../css/sidebar.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faHome} from '@fortawesome/free-solid-svg-icons'\r\nimport {faUsers} from '@fortawesome/free-solid-svg-icons'\r\nimport {faMoneyCheckAlt} from '@fortawesome/free-solid-svg-icons'\r\nimport {faMoneyBillWave} from '@fortawesome/free-solid-svg-icons'\r\nimport {faPaperPlane} from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const sidebarMenu = [\r\n    {\r\n        title: 'Dashboard',\r\n        icon: <FontAwesomeIcon icon={faHome}></FontAwesomeIcon>,\r\n        link: '/'\r\n    },\r\n    {\r\n        title: 'Accounts',\r\n        icon: <FontAwesomeIcon icon={faUsers}></FontAwesomeIcon>,\r\n        link: '/Accounts'\r\n    },\r\n    {\r\n        title: 'Deposit',\r\n        icon: <FontAwesomeIcon icon={faMoneyCheckAlt}></FontAwesomeIcon>,\r\n        link: '/Deposit'\r\n    },\r\n    {\r\n        title: 'Withdraw',\r\n        icon: <FontAwesomeIcon icon={faMoneyBillWave}></FontAwesomeIcon>,\r\n        link: '/Withdraw'\r\n    },\r\n    {\r\n        title: 'Send',\r\n        icon: <FontAwesomeIcon icon={faPaperPlane}></FontAwesomeIcon>,\r\n        link: '/Send'\r\n    },\r\n]\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className= 'grid-parent'>\r\n            <div className='sidebar'>\r\n                <h2>BankU</h2>\r\n                <ul className='sidebar-list'>\r\n                    {sidebarMenu.map((menu, index) => {\r\n                    return (\r\n                        <li key={index} className='sidebar-list-row' onClick={()=>{window.location.pathname = menu.link}}>\r\n                            <div id='icon'>{menu.icon} </div>\r\n                            <div id='title'>{menu.title}</div>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <button id='load-data-btn'>Load Data</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","export default __webpack_public_path__ + \"static/media/avatar.fafdb330.png\";","import '../css/navbar.css'\r\nimport avatar from './img/avatar.png'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className='navbar'>\r\n\r\n            <h1>Bragais, Alfonso</h1>\r\n            <img src={avatar}></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import './App.css';\r\nimport React from 'react';\r\nimport Deposit from './components/Deposit';\r\nimport Accounts from './components/Accounts';\r\nimport Withdraw from './components/Withdraw';\r\nimport Send from './components/Send';\r\nimport Dashboard from './components/Dashboard';\r\nimport Sidebar from './components/Sidebar';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\nimport Navbar from './components/Navbar';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className='app'>\r\n        <Sidebar />\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path='/' component={Dashboard} />\r\n          <Route path='/Deposit' component={Deposit} />\r\n          <Route path='/Accounts' component={Accounts} />\r\n          <Route path='/Withdraw' component={Withdraw} />\r\n          <Route path='/Send' component={Send} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}